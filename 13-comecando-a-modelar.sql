-- ENTRANDO COM MAIS TELEFONES

UPDATE CLIENTE 
SET TELEFONE = '97865434'
WHERE NOME = 'JOAO';

/* PETER CHEN, VENDO TODO ESSE CENARIO AFIRMOU: NAO PODEMOS CRIAR BANCOS
DE DADOS VOLTADOS PARA PROCEDIMENTOS EMPRESARIAIS, POIS OS PROCEDIMENTOS
SOFREM INTERFERENCIAS EXTERNAS E PODEM SER ALTERADOS. A UNICA COISA
QUE NAO SOFRE ALTERACAO SAO OS DADOS.

POR EXEMPLO, ARMAZENAMOS NO BANCO A VENDA DE JANEIRO, FEVEREIRO E MARCO
O TOTAL DAS VENDAS E O IMPOSTO PAGO AO GOVERNO. 
FAZEMOS ISSO DURANTE MUITO TEMPO. DE UMA HORA PRA OUTRA O GOVERNO
MUDA A ALIQUOTA DO IMPOSTO. COMO FARÁ SENTIDO OS PAGAMENTOS ARMAZENADOS
ANTERIORMENTE? AQUI NOTA-SE QUE ARMAZENAMOS DADOS E ARMAZENAMOS
INFORMACOES CORRESPONDENTES AOS PROCEDIMENTOS EXTERNOS. DEVEMOS
APENAS ARMAZENAR OS DADOS, POIS ELES SAO SUFICIENTES PARA GERAR
A INFORMACAO.

MODELAR É UMA ARTE, ALGO QUE SE APRENDE COM A PRATICA. E VOCES PODEM
SE PERGUNTAR: MAS SE É ALGO QUE SE APRENDE COM A PRATICA, COMO QUEM
ESTA COMEÇANDO, APRENDE?

ASSIM COMO PETER CHEN CRIOU O MODELO DE ENTIDADE E RELACIONAMENTO, O MER,
FORAM CRIADAS FORMAS NORMAIS, QUE SAO DIRETRIZES PARA APLICAR EM
MODELAGEM DE AMBIENTES OLTP OU AMBIENTES TRANSACIONAIS DE BANCOS
DE DADOS.

HOJE TEMOS MAIS DO QUE 3 FORMAS NORMAIS, MAS AO NORMALIZARMOS UM
BANCO ATE A SUA TERCEIRA FORMA, É O SUFICIENTE PARA TER UM
TRABALHO LIMPO E LIVRE DE ERROS. VEREMOS AS TRES FORMAS NORMAIS,
UMA A UMA, DETALHADAMENTE NAS PROXIMAS AULAS.
*/


/* PRIMEIRA FORMA NORMAL 

    1 - TODO CAMPO VETORIZADO SE TORNARA OUTRA TABELA

        [amarelo, azul, laranja, verde] > CORES 
        [Ka, fiesta, uno, civic] > CARROS 

    2 - TODO CAMPO MULTIVALORADO SE TORNARA OUTRA TABELA 

        Quando o campo for divisível (Campo Endereço)

    3 - TODA TABELA NECESSITA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE TODO O REGISTRO COMO SENDO UNICO: PRIMARY KEY. 
*/


/*  OBRIGATORIEDADE E CARDINALIDADE (1,1)

OBRIGATORIEDADE: Define se é obrigatório ter.
CARDINALIDADE: Define quantos podem ter. 

EX: 

Estamos no inicio da modelagem para um sistema, e o nosso gestor nos pediu a modelagem da tabela de clientes com a seguinte regra de negócio: 

ENDERECO - OBRITARIO O CADASTRO DE UM ENDERECO

    CLIENTE > ENDERECO (1,1)
    ENDERECO > CLIENTE (1,1) 

    RESULTADO PEGANDO A CARDINALIDADE, PARTINDO DO CLIENTE: RELACIONAMENTO (1,1)

TELEFONE - O CLIENTE NAO E OBRIGADO A INFORMAR O TELEFONE, POREM, CASO QUEIRA, ELE PODE INFORMAR MAIS DE UM

    CLIENTE > TELEFONE (0,N)
    TELEFONE > CLIENTE (1,1) 

    RESULTADO PEGANDO A CARDINALIDADE, PARTINDO DO CLIENTE: RELACIONAMENTO (1,N)


*/

/* MODELO FISICO */

CREATE DATABASE COMERCIO;

USE COMERCIO; 

CREATE TABLE CLIENTE(
    IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30) NOT NULL,
    SEXO ENUM('M','F') NOT NULL, 
    EMAIL VARCHAR(50) UNIQUE,
    CPF VARCHAR(15) UNIQUE
);

/* CHAVE ESTRANGEIRA - FOREIGN KEY 
É A CHAVE PRIMARIA DE UMA TABELA QUE VAI ATÉ A OUTRA TABELA PARA FAZER REFERENCIA ENTRE REGISTROS.*/

/*  ENDERECO - OBRIGATORIO
CADASTRO DE SOMENTE UM.

TELEFONE - NAO OBRIGATORIO
CADASTRO DE MAIS DE UM (OPCIONAL). */

/* CHAVE ESTRANGEIRA - FOREIGN KEY 

EM RELACIONAMENTO 1 X 1 A CHAVE ESTRANGEIRA FICA NA TABELA MAIS FRACA 

EM RELACIONAMENTO 1 X N A CHAVE ESTRANGEIRA FICARA NA TABELA DE CARDINALIDADE N

EM RELACIONAMENTO N X N DEVE-SE CRIAR UMA TABELA AUXILIAR/PIVO

*/

CREATE TABLE ENDERECO(
    IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
    RUA VARCHAR(30) NOT NULL,
    BAIRRO VARCHAR(30) NOT NULL,
    CIDADE VARCHAR(30) NOT NULL,
    ESTADO CHAR(2) NOT NULL,
    ID_CLIENTE INT UNIQUE, -- A REGRA DE NEGOCIO 1 X 1 É DEFINIDA AQUI.
    FOREIGN KEY(ID_CLIENTE) 
    REFERENCES CLIENTE(IDCLIENTE) 
);

CREATE TABLE TELEFONE(
    IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
    TIPO ENUM('RES', 'COM', 'CEL') NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    ID_CLIENTE INT,
    FOREIGN KEY(ID_CLIENTE)
    REFERENCES CLIENTE(IDCLIENTE)
);


INSERT INTO CLIENTE VALUES(NULL,'JOAO','M','JOAOA@IG.COM','76567587887');
INSERT INTO CLIENTE VALUES(NULL,'CARLOS','M','CARLOSA@IG.COM','5464553466');
INSERT INTO CLIENTE VALUES(NULL,'ANA','F','ANA@IG.COM','456545678');
INSERT INTO CLIENTE VALUES(NULL,'CLARA','F',NULL,'5687766856');
INSERT INTO CLIENTE VALUES(NULL,'JORGE','M','JORGE@IG.COM','8756547688');
INSERT INTO CLIENTE VALUES(NULL,'CELIA','M','JCELIA@IG.COM','5767876889');




